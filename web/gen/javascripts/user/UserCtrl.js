// Generated by CoffeeScript 1.11.1
(function() {
  var UserCtrl;

  UserCtrl = (function() {
    function UserCtrl($cookieStore, $log, $location, UserService, uiCalendarConfig) {
      this.$cookieStore = $cookieStore;
      this.$log = $log;
      this.$location = $location;
      this.UserService = UserService;
      this.uiCalendarConfig = uiCalendarConfig;
      this.$log.debug("UserCtrl created");
      this.userprofile = this.$cookieStore.get('userdata');
      this.suggestedEventsInfo = {};
      this.upcomingEventsInfo = {};
      this.pastEventsInfo = {};
      this.events1 = [];
      this.eventSources = [this.events1];
      this.dashboard();
      this.evc = {
        title: "jjj"
      };
      this.eventClicked = [this.evc];
      this.uiConfig = {
        calendar: {
          height: 'auto',
          firstDay: 1,
          editable: true,
          header: {
            left: 'title',
            center: '',
            right: 'today prev,next'
          },
          eventClick: this.onEventClick,
          eventRender: this.eventRender
        }
      };
    }

    UserCtrl.prototype.test = function() {
      return this.$log.debug("TEST " + $('#modalEventSlug').val());
    };

    UserCtrl.prototype.onEventClick = function(date, jsEvent, view) {
      console.log("ST: " + this.evc);
      this.evc = date;
      console.log("Event clicked --> " + date.slug + " , " + date.title + ", " + this.evc.title);
      if (typeof date.url === 'undefined') {
        $('#myModal').modal('toggle');
        $('#myModalLabel').text(date.title);
        $('#myModalInfo').text(date.info);
        $('#modalWhen').text(moment(date.start).format("DD-MM-YYYY"));
        $('#modalPeopleCount').text(33);
        $('#modalCommentsCount').text(12);
        return $('#modalEventSlug').text(date.slug);
      } else {
        return console.log("open link");
      }
    };

    UserCtrl.prototype.eventRender = function(event, element) {
      return element.attr({
        'tooltip': event.title,
        'tooltip-append-to-body': true
      });
    };

    UserCtrl.prototype.renderCalender = function(calendar) {
      if (this.uiCalendarConfig.calendars[calendar]) {
        return this.uiCalendarConfig.calendars[calendar].fullCalendar('render');
      }
    };

    UserCtrl.prototype.addEvents = function(data) {
      var i, item, len, results;
      results = [];
      for (i = 0, len = data.length; i < len; i++) {
        item = data[i];
        results.push(this.events1.push({
          id: item.profileId,
          title: item.name,
          start: new Date(item.when),
          info: item.info,
          stick: true,
          slug: item.slug
        }));
      }
      return results;
    };

    UserCtrl.prototype.dashboard = function() {
      this.UserService.details(this.userprofile.email).then((function(_this) {
        return function(data) {
          var i, len, obj, ref, results;
          _this.$log.debug("dashboard: " + data.data.suggestedEventsInfo);
          _this.upcomingEventsInfo = data.data.upcomingEventsInfo;
          _this.pastEventsInfo = data.data.pastEventsInfo;
          _this.addEvents(_this.upcomingEventsInfo);
          ref = _this.eventSources;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            obj = ref[i];
            results.push(_this.$log.debug("ev2: " + JSON.stringify(obj)));
          }
          return results;
        };
      })(this));
      return this.UserService.suggestions(this.userprofile.email).then(((function(_this) {
        return function(data) {
          _this.$log.debug("Suggestions: " + data.data + ". " + data);
          return _this.suggestedEventsInfo = data.data;
        };
      })(this)));
    };

    return UserCtrl;

  })();

  controllersModule.controller('UserCtrl', ['$cookieStore', '$log', '$location', 'UserService', 'uiCalendarConfig', UserCtrl]);

}).call(this);
